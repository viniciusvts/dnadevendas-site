@mixin padding() {
  width: 100%;
  display: block;
  padding: 5% 10%;

  @include breakpoint(smartphones){
    padding: 10px;
  }
}

@mixin transition($args: all 400ms ease) {
  -webkit-transition: $args;
  -moz-transition: $args;
  -ms-transition: $args;
  -o-transition: $args;
  transition: $args;
}

@mixin background($bg) {
  background: url($bg);
  background-repeat: no-repeat;
  background-attachment: fixed;
  background-position: center; 
  background-size: cover;
}

// functions
@function calculateRem($size) {
  $remSize: $size / 16px;
  @return $remSize * 1rem;
}

@mixin fontSize($size) {
  font-size: $size;
  font-size: calculateRem($size);
}


/// mixin para a construção de um max media query
///
/// @access public
/// @author Vinicius de Santana
/// @param {Size} $screensizepx — Tamanho da tela
/// @param {String} $screensizeprefix - Pprefixo a ser usado
/// @example $screensizepx — 1900px
/// @media (min-width: $screensizepx) {
/// }
/// @example $screensizeprefix — bp-col
///  .#{$screensizeprefix} {
///    -ms-flex-preferred-size: 0;
///    flex-basis: 0;
///    -ms-flex-positive: 1;
///    flex-grow: 1;
///    max-width: 100%;
///  }
@mixin mediaScreenMax($tamanhoDeTela) {
  @media (max-width: $tamanhoDeTela) {
      @content;
  }
}
/// mixin para a construção de um min media query
///
/// @access public
/// @author Vinicius de Santana
/// @param {Size} $screensizepx — Tamanho da tela
/// @param {String} $screensizeprefix - Pprefixo a ser usado
/// @example $screensizepx — 1900px
/// @media (min-width: $screensizepx) {
/// }
/// @example $screensizeprefix — bp-col
///  .#{$screensizeprefix} {
///    -ms-flex-preferred-size: 0;
///    flex-basis: 0;
///    -ms-flex-positive: 1;
///    flex-grow: 1;
///    max-width: 100%;
///  }
@mixin mediaScreenMin($tamanhoDeTela) {
  @media (min-width: $tamanhoDeTela) {
      @content;
  }
}

@function proportional-text($font-size, $viewport-size) {
  @return ($font-size * 100 / $viewport-size) + vw;
}